{{ $fullname := include "wso2si.fullname" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-eiserver
  labels:
    {{- include "wso2si.labels" . | nindent 4}}
spec:
  replicas: {{ .Values.replication.initialCount }}
  {{- with .Values.replication.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      service: wso2si-eiserver
      {{- include "wso2si.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: wso2si-eiserver
        {{- include "wso2si.labels" .  | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              {{- include "wso2si.selectorExpressions" . | nindent 14 }}
            topologyKey: kubernetes.io/hostname
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: volume
        image: {{ .Values.image.eiserver.repository }}:{{ .Values.image.eiserver.tag }}
        {{- with .Values.resources.eiserver }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{ end }}
        command:
        - /bin/sh
        args:
        - -c
        - "if ! [ -d /opt/wso2ei/wso2ei-6.6.0 ]; then cp -r /home/wso2carbon/* /opt/wso2ei; fi"
        volumeMounts:
        - name: wso2ei
          mountPath: /opt/wso2ei
      containers:
      # Quick hack to expose https port with fake cert as http.
      - name: proxy
        image: "{{ .Values.proxy.image }}:{{ .Values.proxy.tag }}"
        ports:
        - name: proxy
          containerPort: 9090
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx
          name: config
        {{- with .Values.proxy.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      - name: server
        image: {{ .Values.image.eiserver.repository }}:{{ .Values.image.eiserver.tag }}
        {{- with .Values.resources.eiserver }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{ end }}
        env:
        - name: WORKING_DIRECTORY
          value: /opt/wso2ei
        - name: WSO2_SERVER_HOME
          value: /opt/wso2ei/wso2ei-6.6.0
        ports:
        - containerPort: 8280
          name: tcp8280
        - containerPort: 8283
          name: tcp8283
        - containerPort: 9443
          name: https
        volumeMounts:
        - name: wso2ei
          mountPath: /opt/wso2ei
      volumes:
      - name: wso2ei
        emptyDir: {}
      - name: config
        configMap:
          defaultMode: 0420
          name: {{ $fullname }}-einginx
---
# ClusterIP service to log into wso2si
apiVersion: v1
kind: Service
metadata:
  name: {{ include "wso2si.fullname" . }}-eiserver
  labels:
    service: wso2si-eiserver
    {{- include "wso2si.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    name: https
    targetPort: 9443
    port: 9443
  - protocol: TCP
    name: http
    targetPort: 9090
    port: 9090
  - protocol: TCP
    name: tcp8280
    targetPort: 8280
    port: 8280
  - protocol: TCP
    name: tcp7443
    targetPort: 8283
    port: 8283
  selector:
    service: wso2si-eiserver
    {{- include "wso2si.selectorLabels" . | nindent 4 }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullname }}-eiserver
  labels:
    service: wso2si-eiserver
    {{- include "wso2si.labels" . | nindent 4 }}
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: {{ $fullname }}-eiserver
  tls:
    termination: Edge
    insecureEdgeTerminationPolicy: Redirect
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullname }}-eiserver
  labels:
    service: wso2si-eiserver
    {{- include "wso2si.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      service: wso2si-eiserver
      {{- include "wso2si.selectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector: {}
    ports: []
  - from:
    - namespaceSelector: {}
    ports: []
