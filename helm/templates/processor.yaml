{{ $fullname := include "wso2si.fullname" . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-processor
  labels:
    {{- include "wso2si.labels" . | nindent 4}}
spec:
  replicas: {{ .Values.replication.initialCount }}
  {{- with .Values.replication.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      service: wso2si-processor
      {{- include "wso2si.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        service: wso2si-processor
        {{- include "wso2si.labels" .  | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              {{- include "wso2si.selectorExpressions" . | nindent 14 }}
            topologyKey: kubernetes.io/hostname
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      {{- if .Values.proxy.enabled }}
      # Si necesitamos autenticaci√≥n, insertamos un proxy
      - name: proxy 
        image: "{{ .Values.proxy.image }}:{{ .Values.proxy.tag }}"
        ports:
        - name: proxy
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - mountPath: /etc/nginx
          name: config
        {{- with .Values.proxy.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
      - name: processor
        image: {{ .Values.image.processor.repository }}:{{ .Values.image.processor.tag }}
        {{- with .Values.resources.processor }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{ end }}
        ports:
        - containerPort: 9390
          name: http
        {{- with .Values.livenessProbe }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9390
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: wso2si
          mountPath: /opt/wso2si
      volumes:
      - name: wso2si
        emptyDir: {}
      - name: config
        configMap:
          defaultMode: 0420
          name: {{ $fullname }}-nginx
---
# ClusterIP service to log into wso2si
apiVersion: v1
kind: Service
metadata:
  name: {{ include "wso2si.fullname" . }}-processor
  labels:
    fiware/name: {{ include "wso2si.fullname" . }}
    {{- include "wso2si.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    name: http
    targetPort: 9390
    port: 9390
  {{- if .Values.proxy.enabled }}
  - protocol: TCP
    name: proxy
    targetPort: 8080
    port: 8080
  {{- end }}
  selector:
    service: wso2si-processor
    {{- include "wso2si.selectorLabels" . | nindent 4 }}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ $fullname }}-processor
  labels:
    service: wso2si-processor
    {{- include "wso2si.labels" . | nindent 4 }}
spec:
  port:
    {{- if .Values.proxy.enabled }}
    targetPort: proxy
    {{- else }}
    targetPort: http
    {{- end }}
  to:
    kind: Service
    name: {{ $fullname }}-processor
  tls:
    termination: Edge
    insecureEdgeTerminationPolicy: Allow
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $fullname }}-processor
  labels:
    service: wso2si-processor
    {{- include "wso2si.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      service: wso2si-processor
      {{- include "wso2si.selectorLabels" . | nindent 6 }}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector: {}
    ports: []
  - from:
    - podSelector: {}
    ports: []
